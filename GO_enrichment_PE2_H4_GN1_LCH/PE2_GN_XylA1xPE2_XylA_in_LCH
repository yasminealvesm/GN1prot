import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Suponha que 'seu_arquivo.xlsx' seja o seu arquivo de dados
data = pd.read_excel('GOEnri_log2_0.58.xlsx')

# Filtrar dados para o grupo específico e p-valor menor que 0.05
filtered_data = data[(data['Comparison (condition 1 / condition 2)'] == 'Test 3 / Ctrl-3') & (data['Pvalue'] < 0.05)]

# Mapear as categorias para cores
category_colors = {'Process': 'blue', 'Function': 'green', 'Component': 'red'}

# Adicionar uma nova coluna 'Category Color' baseada na categoria
filtered_data.loc[:, 'Category Color'] = filtered_data['Namespace'].map(category_colors).copy()

# Agrupar por GO ID e calcular a média do Log2 Fold Enrichment
grouped_data = filtered_data.groupby(['GO Id', 'Namespace']).agg({'Log2 Fold Enrichment': 'mean', 'GO Name': 'first', 'Category Color': 'first'})

# Selecionar os top 20 termos de 'Process', top 15 termos de 'Component' e top 10 termos de 'Function'
top_terms_process = grouped_data[grouped_data.index.get_level_values('Namespace') == 'Process'].nlargest(20, 'Log2 Fold Enrichment')
top_terms_component = grouped_data[grouped_data.index.get_level_values('Namespace') == 'Component'].nlargest(14, 'Log2 Fold Enrichment')
top_terms_function = grouped_data[grouped_data.index.get_level_values('Namespace') == 'Function'].nlargest(10, 'Log2 Fold Enrichment')

# Concatenar os resultados
top_terms_per_category = pd.concat([top_terms_process, top_terms_component, top_terms_function])

# Criar um gráfico de barras horizontais com tamanho ajustado
fig, ax = plt.subplots(figsize=(12, 8))  # Ajuste o tamanho conforme necessário

# Inicializar um dicionário para rótulos únicos
legend_labels = {}

# Modificar a linha abaixo para incluir o "GO ID"
for namespace, color in category_colors.items():
    subset = top_terms_per_category[top_terms_per_category['Category Color'] == color]
    bars = ax.barh(subset['GO Name'] + ' (' + subset.index.get_level_values('GO Id').astype(str) + ')',
                   subset['Log2 Fold Enrichment'],
                   color=color,
                   label=namespace)  # Adicionar rótulos aos objetos de barras
    
    # Adicionar rótulos únicos ao dicionário
    legend_labels[namespace] = bars[0]

# Adicionar rótulos e título
ax.set_xlabel('Log2 Fold Enrichment')
ax.set_ylabel('GO Name (GO ID)')
ax.set_title('Top Enriched GO Terms for PE2_GN_XylA1 / PE2_XylA in LCH')

# Ajustar a posição inicial das barras
ax.set_xlim(min(top_terms_per_category['Log2 Fold Enrichment']) - 0.25, max(top_terms_per_category['Log2 Fold Enrichment']) + 0.25)

# Adicionar a legenda com rótulos únicos
ax.legend(legend_labels.values(), legend_labels.keys(), loc='upper left', bbox_to_anchor=(1, 1))

# Ajuste o valor do tamanho da fonte conforme necessário
ax.yaxis.set_tick_params(labelsize=10)

# Ajustar a posição do gráfico para acomodar a legenda
fig.subplots_adjust(right=0.90, left=0.65)

plt.show()
